name: Update Dependency Graph

permissions:
  contents: write
  pull-requests: write

on:
  push:
    branches:
      - main

env:
  BRANCH_NAME: update-dependency-graph

jobs:
  generate-and-compare:
    name: Generate and Compare Dependency Graph
    runs-on: ubuntu-latest
    outputs:
      has_diff: ${{ steps.check_diff.outputs.has_diff }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter with FVM
        uses: kuhnroyal/flutter-fvm-config-action/setup@v3

      - name: Prepare Melos
        run: echo "MELOS_SDK_PATH=${{ env.FLUTTER_ROOT }}" >> "$GITHUB_ENV"

      - name: Install Melos
        uses: bluefireteam/melos-action@v3
        with:
          run-bootstrap: false

      - name: Install Dependencies
        run: dart pub get --enforce-lockfile

      - name: Ensure Docs Directory Exists
        run: mkdir -p "./docs"

      - name: Ensure Previous Dependency Graph Exists
        run: |
          if [ ! -f "./docs/dependency_graph.dot" ]; then
            touch "./docs/dependency_graph.dot"
          fi

      - name: Generate Dependency Graph
        # To resolve dependencies, output to standard output before writing to the file.
        run: |
          melos list
          melos list --gviz > "dependency_graph.dot"

      - name: Upload Dependency Graph as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dependency_graph
          path: dependency_graph.dot

      - name: Compare with Previous Output
        id: check_diff
        run: |
          if diff "dependency_graph.dot" "./docs/dependency_graph.dot"; then
            echo "has_diff=false" >> "$GITHUB_OUTPUT"
          else
            echo "has_diff=true" >> "$GITHUB_OUTPUT"
          fi

  create-branch:
    name: Create Branch
    runs-on: ubuntu-latest
    needs: generate-and-compare
    if: needs.generate-and-compare.outputs.has_diff == 'true'
    outputs:
      branch_exists: ${{ steps.check-branch.outputs.branch_exists }}
    steps:
      - uses: actions/checkout@v4

      - name: Check if branch already exists
        id: check-branch
        run: |
          if git fetch origin ${{ env.BRANCH_NAME }}; then
            echo "Branch already exists."
            echo "branch_exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "branch_exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create and Push New Branch
        if: steps.check-branch.outputs.branch_exists != 'true'
        run: |
          git switch -c ${{ env.BRANCH_NAME }}
          git push origin ${{ env.BRANCH_NAME }}

  commit-changes:
    name: Commit Changes
    runs-on: ubuntu-latest
    needs: create-branch
    if: needs.create-branch.outputs.branch_exists != 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_NAME }}

      - name: Download Dependency Graph Artifact
        uses: actions/download-artifact@v4
        with:
          name: dependency_graph

      - name: Install Graphviz
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz

      - name: Set up ghcp
        run: |
          curl -fL -o /tmp/ghcp.zip https://github.com/int128/ghcp/releases/download/v1.13.5/ghcp_linux_amd64.zip
          unzip /tmp/ghcp.zip -d /tmp

      - name: Ensure Docs Directory Exists
        run: mkdir -p "./docs"

      - name: Generate SVG Image
        run: dot -Tsvg "dependency_graph.dot" -o "./docs/dependency_graph.svg"

      - name: Update Docs Directory
        run: |
          mv "dependency_graph.dot" "./docs/dependency_graph.dot"

      - name: Generate GitHub App token
        id: generate_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.PR_WRITER_APP_ID }}
          private-key: ${{ secrets.PR_WRITER_PRIVATE_KEY }}

      - name: Commit Changes
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          find docs/ -type f -print0 | xargs -0 /tmp/ghcp commit \
            -r "$GITHUB_REPOSITORY" \
            -b "${{ env.BRANCH_NAME }}" \
            -m "Update Dependency Graph and SVG image" \

  create-pr:
    name: Create Pull Request
    runs-on: ubuntu-latest
    needs: commit-changes
    steps:
      - uses: actions/checkout@v4

      - name: Generate GitHub App token
        id: generate_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.PR_WRITER_APP_ID }}
          private-key: ${{ secrets.PR_WRITER_PRIVATE_KEY }}

      - name: Create release PR
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          title: "doc: Update Dependency Graph"
          body: "This PR updates the dependency graph and SVG image."
        run: gh pr create -B "$GITHUB_REF" -H "${{ env.BRANCH_NAME }}" -t "${{ env.title }}" -b "${{ env.body }}" -a "$GITHUB_ACTOR"
