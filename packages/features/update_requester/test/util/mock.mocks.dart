// Mocks generated by Mockito 5.4.6 from annotations
// in update_requester/test/util/mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:altfire_configurator/src/config.dart' as _i2;
import 'package:altfire_configurator/src/configurator.dart' as _i5;
import 'package:firebase_remote_config/firebase_remote_config.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:package_info_plus/package_info_plus.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeConfig_0<T> extends _i1.SmartFake implements _i2.Config<T> {
  _FakeConfig_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [PackageInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockPackageInfo extends _i1.Mock implements _i3.PackageInfo {
  @override
  String get appName =>
      (super.noSuchMethod(
            Invocation.getter(#appName),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#appName),
            ),
            returnValueForMissingStub: _i4.dummyValue<String>(
              this,
              Invocation.getter(#appName),
            ),
          )
          as String);

  @override
  String get packageName =>
      (super.noSuchMethod(
            Invocation.getter(#packageName),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#packageName),
            ),
            returnValueForMissingStub: _i4.dummyValue<String>(
              this,
              Invocation.getter(#packageName),
            ),
          )
          as String);

  @override
  String get version =>
      (super.noSuchMethod(
            Invocation.getter(#version),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#version),
            ),
            returnValueForMissingStub: _i4.dummyValue<String>(
              this,
              Invocation.getter(#version),
            ),
          )
          as String);

  @override
  String get buildNumber =>
      (super.noSuchMethod(
            Invocation.getter(#buildNumber),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#buildNumber),
            ),
            returnValueForMissingStub: _i4.dummyValue<String>(
              this,
              Invocation.getter(#buildNumber),
            ),
          )
          as String);

  @override
  String get buildSignature =>
      (super.noSuchMethod(
            Invocation.getter(#buildSignature),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#buildSignature),
            ),
            returnValueForMissingStub: _i4.dummyValue<String>(
              this,
              Invocation.getter(#buildSignature),
            ),
          )
          as String);

  @override
  Map<String, dynamic> get data =>
      (super.noSuchMethod(
            Invocation.getter(#data),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [Configurator].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfigurator extends _i1.Mock implements _i5.Configurator {
  @override
  _i6.Stream<_i7.RemoteConfigUpdate> get onConfigUpdated =>
      (super.noSuchMethod(
            Invocation.getter(#onConfigUpdated),
            returnValue: _i6.Stream<_i7.RemoteConfigUpdate>.empty(),
            returnValueForMissingStub:
                _i6.Stream<_i7.RemoteConfigUpdate>.empty(),
          )
          as _i6.Stream<_i7.RemoteConfigUpdate>);

  @override
  _i6.Future<bool> fetchAndActivate() =>
      (super.noSuchMethod(
            Invocation.method(#fetchAndActivate, []),
            returnValue: _i6.Future<bool>.value(false),
            returnValueForMissingStub: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<bool> activate() =>
      (super.noSuchMethod(
            Invocation.method(#activate, []),
            returnValue: _i6.Future<bool>.value(false),
            returnValueForMissingStub: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<void> configure({
    required Duration? fetchTimeout,
    required Duration? minimumFetchInterval,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#configure, [], {
              #fetchTimeout: fetchTimeout,
              #minimumFetchInterval: minimumFetchInterval,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> setDefaults(Map<String, Object?>? defaultParameters) =>
      (super.noSuchMethod(
            Invocation.method(#setDefaults, [defaultParameters]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Stream<_i7.RemoteConfigUpdate> filteredOnConfigUpdated(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#filteredOnConfigUpdated, [key]),
            returnValue: _i6.Stream<_i7.RemoteConfigUpdate>.empty(),
            returnValueForMissingStub:
                _i6.Stream<_i7.RemoteConfigUpdate>.empty(),
          )
          as _i6.Stream<_i7.RemoteConfigUpdate>);

  @override
  String getString(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getString, [key]),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.method(#getString, [key]),
            ),
            returnValueForMissingStub: _i4.dummyValue<String>(
              this,
              Invocation.method(#getString, [key]),
            ),
          )
          as String);

  @override
  int getInt(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getInt, [key]),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  double getDouble(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getDouble, [key]),
            returnValue: 0.0,
            returnValueForMissingStub: 0.0,
          )
          as double);

  @override
  bool getBool(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getBool, [key]),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  Map<String, Object?> getJson(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getJson, [key]),
            returnValue: <String, Object?>{},
            returnValueForMissingStub: <String, Object?>{},
          )
          as Map<String, Object?>);

  @override
  List<Map<String, Object?>> getListJson(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getListJson, [key]),
            returnValue: <Map<String, Object?>>[],
            returnValueForMissingStub: <Map<String, Object?>>[],
          )
          as List<Map<String, Object?>>);

  @override
  T getData<T extends Object>({
    required String? key,
    required T Function(Map<String, Object?>)? fromJson,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getData, [], {#key: key, #fromJson: fromJson}),
            returnValue: _i4.dummyValue<T>(
              this,
              Invocation.method(#getData, [], {#key: key, #fromJson: fromJson}),
            ),
            returnValueForMissingStub: _i4.dummyValue<T>(
              this,
              Invocation.method(#getData, [], {#key: key, #fromJson: fromJson}),
            ),
          )
          as T);

  @override
  _i2.Config<String> getStringConfig(
    String? key, {
    void Function(String)? onConfigUpdated,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getStringConfig,
              [key],
              {#onConfigUpdated: onConfigUpdated},
            ),
            returnValue: _FakeConfig_0<String>(
              this,
              Invocation.method(
                #getStringConfig,
                [key],
                {#onConfigUpdated: onConfigUpdated},
              ),
            ),
            returnValueForMissingStub: _FakeConfig_0<String>(
              this,
              Invocation.method(
                #getStringConfig,
                [key],
                {#onConfigUpdated: onConfigUpdated},
              ),
            ),
          )
          as _i2.Config<String>);

  @override
  _i2.Config<int> getIntConfig(
    String? key, {
    void Function(int)? onConfigUpdated,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getIntConfig,
              [key],
              {#onConfigUpdated: onConfigUpdated},
            ),
            returnValue: _FakeConfig_0<int>(
              this,
              Invocation.method(
                #getIntConfig,
                [key],
                {#onConfigUpdated: onConfigUpdated},
              ),
            ),
            returnValueForMissingStub: _FakeConfig_0<int>(
              this,
              Invocation.method(
                #getIntConfig,
                [key],
                {#onConfigUpdated: onConfigUpdated},
              ),
            ),
          )
          as _i2.Config<int>);

  @override
  _i2.Config<double> getDoubleConfig(
    String? key, {
    void Function(double)? onConfigUpdated,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getDoubleConfig,
              [key],
              {#onConfigUpdated: onConfigUpdated},
            ),
            returnValue: _FakeConfig_0<double>(
              this,
              Invocation.method(
                #getDoubleConfig,
                [key],
                {#onConfigUpdated: onConfigUpdated},
              ),
            ),
            returnValueForMissingStub: _FakeConfig_0<double>(
              this,
              Invocation.method(
                #getDoubleConfig,
                [key],
                {#onConfigUpdated: onConfigUpdated},
              ),
            ),
          )
          as _i2.Config<double>);

  @override
  _i2.Config<bool> getBoolConfig(
    String? key, {
    void Function(bool)? onConfigUpdated,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getBoolConfig,
              [key],
              {#onConfigUpdated: onConfigUpdated},
            ),
            returnValue: _FakeConfig_0<bool>(
              this,
              Invocation.method(
                #getBoolConfig,
                [key],
                {#onConfigUpdated: onConfigUpdated},
              ),
            ),
            returnValueForMissingStub: _FakeConfig_0<bool>(
              this,
              Invocation.method(
                #getBoolConfig,
                [key],
                {#onConfigUpdated: onConfigUpdated},
              ),
            ),
          )
          as _i2.Config<bool>);

  @override
  _i2.Config<Map<String, Object?>> getJsonConfig(
    String? key, {
    void Function(Map<String, Object?>)? onConfigUpdated,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getJsonConfig,
              [key],
              {#onConfigUpdated: onConfigUpdated},
            ),
            returnValue: _FakeConfig_0<Map<String, Object?>>(
              this,
              Invocation.method(
                #getJsonConfig,
                [key],
                {#onConfigUpdated: onConfigUpdated},
              ),
            ),
            returnValueForMissingStub: _FakeConfig_0<Map<String, Object?>>(
              this,
              Invocation.method(
                #getJsonConfig,
                [key],
                {#onConfigUpdated: onConfigUpdated},
              ),
            ),
          )
          as _i2.Config<Map<String, Object?>>);

  @override
  _i2.Config<List<Map<String, Object?>>> getListJsonConfig(
    String? key, {
    void Function(List<Map<String, Object?>>)? onConfigUpdated,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getListJsonConfig,
              [key],
              {#onConfigUpdated: onConfigUpdated},
            ),
            returnValue: _FakeConfig_0<List<Map<String, Object?>>>(
              this,
              Invocation.method(
                #getListJsonConfig,
                [key],
                {#onConfigUpdated: onConfigUpdated},
              ),
            ),
            returnValueForMissingStub:
                _FakeConfig_0<List<Map<String, Object?>>>(
                  this,
                  Invocation.method(
                    #getListJsonConfig,
                    [key],
                    {#onConfigUpdated: onConfigUpdated},
                  ),
                ),
          )
          as _i2.Config<List<Map<String, Object?>>>);

  @override
  _i2.Config<T> getDataConfig<T extends Object>(
    String? key, {
    required T Function(Map<String, Object?>)? fromJson,
    void Function(T)? onConfigUpdated,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getDataConfig,
              [key],
              {#fromJson: fromJson, #onConfigUpdated: onConfigUpdated},
            ),
            returnValue: _FakeConfig_0<T>(
              this,
              Invocation.method(
                #getDataConfig,
                [key],
                {#fromJson: fromJson, #onConfigUpdated: onConfigUpdated},
              ),
            ),
            returnValueForMissingStub: _FakeConfig_0<T>(
              this,
              Invocation.method(
                #getDataConfig,
                [key],
                {#fromJson: fromJson, #onConfigUpdated: onConfigUpdated},
              ),
            ),
          )
          as _i2.Config<T>);
}
