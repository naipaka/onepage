// Mocks generated by Mockito 5.4.6 from annotations
// in notification_client/test/utils/mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_local_notifications/src/flutter_local_notifications_plugin.dart'
    as _i2;
import 'package:flutter_local_notifications/src/initialization_settings.dart'
    as _i4;
import 'package:flutter_local_notifications/src/notification_details.dart'
    as _i6;
import 'package:flutter_local_notifications/src/platform_flutter_local_notifications.dart'
    as _i10;
import 'package:flutter_local_notifications/src/platform_specifics/android/enums.dart'
    as _i13;
import 'package:flutter_local_notifications/src/platform_specifics/android/initialization_settings.dart'
    as _i11;
import 'package:flutter_local_notifications/src/platform_specifics/android/notification_channel.dart'
    as _i15;
import 'package:flutter_local_notifications/src/platform_specifics/android/notification_channel_group.dart'
    as _i14;
import 'package:flutter_local_notifications/src/platform_specifics/android/notification_details.dart'
    as _i12;
import 'package:flutter_local_notifications/src/platform_specifics/android/schedule_mode.dart'
    as _i8;
import 'package:flutter_local_notifications/src/platform_specifics/android/styles/messaging_style_information.dart'
    as _i16;
import 'package:flutter_local_notifications/src/platform_specifics/darwin/initialization_settings.dart'
    as _i17;
import 'package:flutter_local_notifications/src/platform_specifics/darwin/notification_details.dart'
    as _i19;
import 'package:flutter_local_notifications/src/platform_specifics/darwin/notification_enabled_options.dart'
    as _i18;
import 'package:flutter_local_notifications/src/types.dart' as _i9;
import 'package:flutter_local_notifications_platform_interface/flutter_local_notifications_platform_interface.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:timezone/timezone.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FlutterLocalNotificationsPlugin].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterLocalNotificationsPlugin extends _i1.Mock
    implements _i2.FlutterLocalNotificationsPlugin {
  @override
  _i3.Future<bool?> initialize(
    _i4.InitializationSettings? initializationSettings, {
    _i5.DidReceiveNotificationResponseCallback?
    onDidReceiveNotificationResponse,
    _i5.DidReceiveBackgroundNotificationResponseCallback?
    onDidReceiveBackgroundNotificationResponse,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #initialize,
              [initializationSettings],
              {
                #onDidReceiveNotificationResponse:
                    onDidReceiveNotificationResponse,
                #onDidReceiveBackgroundNotificationResponse:
                    onDidReceiveBackgroundNotificationResponse,
              },
            ),
            returnValue: _i3.Future<bool?>.value(),
            returnValueForMissingStub: _i3.Future<bool?>.value(),
          )
          as _i3.Future<bool?>);

  @override
  _i3.Future<_i5.NotificationAppLaunchDetails?>
  getNotificationAppLaunchDetails() =>
      (super.noSuchMethod(
            Invocation.method(#getNotificationAppLaunchDetails, []),
            returnValue: _i3.Future<_i5.NotificationAppLaunchDetails?>.value(),
            returnValueForMissingStub:
                _i3.Future<_i5.NotificationAppLaunchDetails?>.value(),
          )
          as _i3.Future<_i5.NotificationAppLaunchDetails?>);

  @override
  _i3.Future<void> show(
    int? id,
    String? title,
    String? body,
    _i6.NotificationDetails? notificationDetails, {
    String? payload,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #show,
              [id, title, body, notificationDetails],
              {#payload: payload},
            ),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> cancel(int? id, {String? tag}) =>
      (super.noSuchMethod(
            Invocation.method(#cancel, [id], {#tag: tag}),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> cancelAll() =>
      (super.noSuchMethod(
            Invocation.method(#cancelAll, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> cancelAllPendingNotifications() =>
      (super.noSuchMethod(
            Invocation.method(#cancelAllPendingNotifications, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> zonedSchedule(
    int? id,
    String? title,
    String? body,
    _i7.TZDateTime? scheduledDate,
    _i6.NotificationDetails? notificationDetails, {
    required _i8.AndroidScheduleMode? androidScheduleMode,
    String? payload,
    _i9.DateTimeComponents? matchDateTimeComponents,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #zonedSchedule,
              [id, title, body, scheduledDate, notificationDetails],
              {
                #androidScheduleMode: androidScheduleMode,
                #payload: payload,
                #matchDateTimeComponents: matchDateTimeComponents,
              },
            ),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> periodicallyShow(
    int? id,
    String? title,
    String? body,
    _i5.RepeatInterval? repeatInterval,
    _i6.NotificationDetails? notificationDetails, {
    required _i8.AndroidScheduleMode? androidScheduleMode,
    String? payload,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #periodicallyShow,
              [id, title, body, repeatInterval, notificationDetails],
              {#androidScheduleMode: androidScheduleMode, #payload: payload},
            ),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> periodicallyShowWithDuration(
    int? id,
    String? title,
    String? body,
    Duration? repeatDurationInterval,
    _i6.NotificationDetails? notificationDetails, {
    _i8.AndroidScheduleMode? androidScheduleMode =
        _i8.AndroidScheduleMode.exact,
    String? payload,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #periodicallyShowWithDuration,
              [id, title, body, repeatDurationInterval, notificationDetails],
              {#androidScheduleMode: androidScheduleMode, #payload: payload},
            ),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i5.PendingNotificationRequest>>
  pendingNotificationRequests() =>
      (super.noSuchMethod(
            Invocation.method(#pendingNotificationRequests, []),
            returnValue: _i3.Future<List<_i5.PendingNotificationRequest>>.value(
              <_i5.PendingNotificationRequest>[],
            ),
            returnValueForMissingStub:
                _i3.Future<List<_i5.PendingNotificationRequest>>.value(
                  <_i5.PendingNotificationRequest>[],
                ),
          )
          as _i3.Future<List<_i5.PendingNotificationRequest>>);

  @override
  _i3.Future<List<_i5.ActiveNotification>> getActiveNotifications() =>
      (super.noSuchMethod(
            Invocation.method(#getActiveNotifications, []),
            returnValue: _i3.Future<List<_i5.ActiveNotification>>.value(
              <_i5.ActiveNotification>[],
            ),
            returnValueForMissingStub:
                _i3.Future<List<_i5.ActiveNotification>>.value(
                  <_i5.ActiveNotification>[],
                ),
          )
          as _i3.Future<List<_i5.ActiveNotification>>);
}

/// A class which mocks [AndroidFlutterLocalNotificationsPlugin].
///
/// See the documentation for Mockito's code generation for more information.
class MockAndroidFlutterLocalNotificationsPlugin extends _i1.Mock
    implements _i10.AndroidFlutterLocalNotificationsPlugin {
  @override
  _i3.Future<bool> initialize(
    _i11.AndroidInitializationSettings? initializationSettings, {
    _i5.DidReceiveNotificationResponseCallback?
    onDidReceiveNotificationResponse,
    _i5.DidReceiveBackgroundNotificationResponseCallback?
    onDidReceiveBackgroundNotificationResponse,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #initialize,
              [initializationSettings],
              {
                #onDidReceiveNotificationResponse:
                    onDidReceiveNotificationResponse,
                #onDidReceiveBackgroundNotificationResponse:
                    onDidReceiveBackgroundNotificationResponse,
              },
            ),
            returnValue: _i3.Future<bool>.value(false),
            returnValueForMissingStub: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<bool?> requestExactAlarmsPermission() =>
      (super.noSuchMethod(
            Invocation.method(#requestExactAlarmsPermission, []),
            returnValue: _i3.Future<bool?>.value(),
            returnValueForMissingStub: _i3.Future<bool?>.value(),
          )
          as _i3.Future<bool?>);

  @override
  _i3.Future<bool?> requestFullScreenIntentPermission() =>
      (super.noSuchMethod(
            Invocation.method(#requestFullScreenIntentPermission, []),
            returnValue: _i3.Future<bool?>.value(),
            returnValueForMissingStub: _i3.Future<bool?>.value(),
          )
          as _i3.Future<bool?>);

  @override
  _i3.Future<bool?> requestNotificationsPermission() =>
      (super.noSuchMethod(
            Invocation.method(#requestNotificationsPermission, []),
            returnValue: _i3.Future<bool?>.value(),
            returnValueForMissingStub: _i3.Future<bool?>.value(),
          )
          as _i3.Future<bool?>);

  @override
  _i3.Future<bool?> requestNotificationPolicyAccess() =>
      (super.noSuchMethod(
            Invocation.method(#requestNotificationPolicyAccess, []),
            returnValue: _i3.Future<bool?>.value(),
            returnValueForMissingStub: _i3.Future<bool?>.value(),
          )
          as _i3.Future<bool?>);

  @override
  _i3.Future<bool?> hasNotificationPolicyAccess() =>
      (super.noSuchMethod(
            Invocation.method(#hasNotificationPolicyAccess, []),
            returnValue: _i3.Future<bool?>.value(),
            returnValueForMissingStub: _i3.Future<bool?>.value(),
          )
          as _i3.Future<bool?>);

  @override
  _i3.Future<void> zonedSchedule(
    int? id,
    String? title,
    String? body,
    _i7.TZDateTime? scheduledDate,
    _i12.AndroidNotificationDetails? notificationDetails, {
    required _i8.AndroidScheduleMode? scheduleMode,
    String? payload,
    _i9.DateTimeComponents? matchDateTimeComponents,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #zonedSchedule,
              [id, title, body, scheduledDate, notificationDetails],
              {
                #scheduleMode: scheduleMode,
                #payload: payload,
                #matchDateTimeComponents: matchDateTimeComponents,
              },
            ),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> startForegroundService(
    int? id,
    String? title,
    String? body, {
    _i12.AndroidNotificationDetails? notificationDetails,
    String? payload,
    _i13.AndroidServiceStartType? startType =
        _i13.AndroidServiceStartType.startSticky,
    Set<_i13.AndroidServiceForegroundType>? foregroundServiceTypes,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #startForegroundService,
              [id, title, body],
              {
                #notificationDetails: notificationDetails,
                #payload: payload,
                #startType: startType,
                #foregroundServiceTypes: foregroundServiceTypes,
              },
            ),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> stopForegroundService() =>
      (super.noSuchMethod(
            Invocation.method(#stopForegroundService, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> show(
    int? id,
    String? title,
    String? body, {
    _i12.AndroidNotificationDetails? notificationDetails,
    String? payload,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #show,
              [id, title, body],
              {#notificationDetails: notificationDetails, #payload: payload},
            ),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> periodicallyShow(
    int? id,
    String? title,
    String? body,
    _i5.RepeatInterval? repeatInterval, {
    _i12.AndroidNotificationDetails? notificationDetails,
    String? payload,
    _i8.AndroidScheduleMode? scheduleMode = _i8.AndroidScheduleMode.exact,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #periodicallyShow,
              [id, title, body, repeatInterval],
              {
                #notificationDetails: notificationDetails,
                #payload: payload,
                #scheduleMode: scheduleMode,
              },
            ),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> periodicallyShowWithDuration(
    int? id,
    String? title,
    String? body,
    Duration? repeatDurationInterval, {
    _i12.AndroidNotificationDetails? notificationDetails,
    String? payload,
    _i8.AndroidScheduleMode? scheduleMode = _i8.AndroidScheduleMode.exact,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #periodicallyShowWithDuration,
              [id, title, body, repeatDurationInterval],
              {
                #notificationDetails: notificationDetails,
                #payload: payload,
                #scheduleMode: scheduleMode,
              },
            ),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> cancel(int? id, {String? tag}) =>
      (super.noSuchMethod(
            Invocation.method(#cancel, [id], {#tag: tag}),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> createNotificationChannelGroup(
    _i14.AndroidNotificationChannelGroup? notificationChannelGroup,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createNotificationChannelGroup, [
              notificationChannelGroup,
            ]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteNotificationChannelGroup(String? groupId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteNotificationChannelGroup, [groupId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> createNotificationChannel(
    _i15.AndroidNotificationChannel? notificationChannel,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createNotificationChannel, [
              notificationChannel,
            ]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteNotificationChannel(String? channelId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteNotificationChannel, [channelId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i16.MessagingStyleInformation?>
  getActiveNotificationMessagingStyle(int? id, {String? tag}) =>
      (super.noSuchMethod(
            Invocation.method(
              #getActiveNotificationMessagingStyle,
              [id],
              {#tag: tag},
            ),
            returnValue: _i3.Future<_i16.MessagingStyleInformation?>.value(),
            returnValueForMissingStub:
                _i3.Future<_i16.MessagingStyleInformation?>.value(),
          )
          as _i3.Future<_i16.MessagingStyleInformation?>);

  @override
  _i3.Future<List<_i15.AndroidNotificationChannel>?>
  getNotificationChannels() =>
      (super.noSuchMethod(
            Invocation.method(#getNotificationChannels, []),
            returnValue:
                _i3.Future<List<_i15.AndroidNotificationChannel>?>.value(),
            returnValueForMissingStub:
                _i3.Future<List<_i15.AndroidNotificationChannel>?>.value(),
          )
          as _i3.Future<List<_i15.AndroidNotificationChannel>?>);

  @override
  _i3.Future<bool?> areNotificationsEnabled() =>
      (super.noSuchMethod(
            Invocation.method(#areNotificationsEnabled, []),
            returnValue: _i3.Future<bool?>.value(),
            returnValueForMissingStub: _i3.Future<bool?>.value(),
          )
          as _i3.Future<bool?>);

  @override
  _i3.Future<bool?> canScheduleExactNotifications() =>
      (super.noSuchMethod(
            Invocation.method(#canScheduleExactNotifications, []),
            returnValue: _i3.Future<bool?>.value(),
            returnValueForMissingStub: _i3.Future<bool?>.value(),
          )
          as _i3.Future<bool?>);

  @override
  _i3.Future<void> cancelAll() =>
      (super.noSuchMethod(
            Invocation.method(#cancelAll, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> cancelAllPendingNotifications() =>
      (super.noSuchMethod(
            Invocation.method(#cancelAllPendingNotifications, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i5.NotificationAppLaunchDetails?>
  getNotificationAppLaunchDetails() =>
      (super.noSuchMethod(
            Invocation.method(#getNotificationAppLaunchDetails, []),
            returnValue: _i3.Future<_i5.NotificationAppLaunchDetails?>.value(),
            returnValueForMissingStub:
                _i3.Future<_i5.NotificationAppLaunchDetails?>.value(),
          )
          as _i3.Future<_i5.NotificationAppLaunchDetails?>);

  @override
  _i3.Future<List<_i5.PendingNotificationRequest>>
  pendingNotificationRequests() =>
      (super.noSuchMethod(
            Invocation.method(#pendingNotificationRequests, []),
            returnValue: _i3.Future<List<_i5.PendingNotificationRequest>>.value(
              <_i5.PendingNotificationRequest>[],
            ),
            returnValueForMissingStub:
                _i3.Future<List<_i5.PendingNotificationRequest>>.value(
                  <_i5.PendingNotificationRequest>[],
                ),
          )
          as _i3.Future<List<_i5.PendingNotificationRequest>>);

  @override
  _i3.Future<List<_i5.ActiveNotification>> getActiveNotifications() =>
      (super.noSuchMethod(
            Invocation.method(#getActiveNotifications, []),
            returnValue: _i3.Future<List<_i5.ActiveNotification>>.value(
              <_i5.ActiveNotification>[],
            ),
            returnValueForMissingStub:
                _i3.Future<List<_i5.ActiveNotification>>.value(
                  <_i5.ActiveNotification>[],
                ),
          )
          as _i3.Future<List<_i5.ActiveNotification>>);
}

/// A class which mocks [IOSFlutterLocalNotificationsPlugin].
///
/// See the documentation for Mockito's code generation for more information.
class MockIOSFlutterLocalNotificationsPlugin extends _i1.Mock
    implements _i10.IOSFlutterLocalNotificationsPlugin {
  @override
  _i3.Future<bool?> initialize(
    _i17.DarwinInitializationSettings? initializationSettings, {
    _i5.DidReceiveNotificationResponseCallback?
    onDidReceiveNotificationResponse,
    _i5.DidReceiveBackgroundNotificationResponseCallback?
    onDidReceiveBackgroundNotificationResponse,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #initialize,
              [initializationSettings],
              {
                #onDidReceiveNotificationResponse:
                    onDidReceiveNotificationResponse,
                #onDidReceiveBackgroundNotificationResponse:
                    onDidReceiveBackgroundNotificationResponse,
              },
            ),
            returnValue: _i3.Future<bool?>.value(),
            returnValueForMissingStub: _i3.Future<bool?>.value(),
          )
          as _i3.Future<bool?>);

  @override
  _i3.Future<bool?> requestPermissions({
    bool? sound = false,
    bool? alert = false,
    bool? badge = false,
    bool? provisional = false,
    bool? critical = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#requestPermissions, [], {
              #sound: sound,
              #alert: alert,
              #badge: badge,
              #provisional: provisional,
              #critical: critical,
            }),
            returnValue: _i3.Future<bool?>.value(),
            returnValueForMissingStub: _i3.Future<bool?>.value(),
          )
          as _i3.Future<bool?>);

  @override
  _i3.Future<_i18.NotificationsEnabledOptions?> checkPermissions() =>
      (super.noSuchMethod(
            Invocation.method(#checkPermissions, []),
            returnValue: _i3.Future<_i18.NotificationsEnabledOptions?>.value(),
            returnValueForMissingStub:
                _i3.Future<_i18.NotificationsEnabledOptions?>.value(),
          )
          as _i3.Future<_i18.NotificationsEnabledOptions?>);

  @override
  _i3.Future<void> zonedSchedule(
    int? id,
    String? title,
    String? body,
    _i7.TZDateTime? scheduledDate,
    _i19.DarwinNotificationDetails? notificationDetails, {
    String? payload,
    _i9.DateTimeComponents? matchDateTimeComponents,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #zonedSchedule,
              [id, title, body, scheduledDate, notificationDetails],
              {
                #payload: payload,
                #matchDateTimeComponents: matchDateTimeComponents,
              },
            ),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> show(
    int? id,
    String? title,
    String? body, {
    _i19.DarwinNotificationDetails? notificationDetails,
    String? payload,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #show,
              [id, title, body],
              {#notificationDetails: notificationDetails, #payload: payload},
            ),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> periodicallyShow(
    int? id,
    String? title,
    String? body,
    _i5.RepeatInterval? repeatInterval, {
    _i19.DarwinNotificationDetails? notificationDetails,
    String? payload,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #periodicallyShow,
              [id, title, body, repeatInterval],
              {#notificationDetails: notificationDetails, #payload: payload},
            ),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> periodicallyShowWithDuration(
    int? id,
    String? title,
    String? body,
    Duration? repeatDurationInterval, {
    _i19.DarwinNotificationDetails? notificationDetails,
    String? payload,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #periodicallyShowWithDuration,
              [id, title, body, repeatDurationInterval],
              {#notificationDetails: notificationDetails, #payload: payload},
            ),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> cancel(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#cancel, [id]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> cancelAll() =>
      (super.noSuchMethod(
            Invocation.method(#cancelAll, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> cancelAllPendingNotifications() =>
      (super.noSuchMethod(
            Invocation.method(#cancelAllPendingNotifications, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i5.NotificationAppLaunchDetails?>
  getNotificationAppLaunchDetails() =>
      (super.noSuchMethod(
            Invocation.method(#getNotificationAppLaunchDetails, []),
            returnValue: _i3.Future<_i5.NotificationAppLaunchDetails?>.value(),
            returnValueForMissingStub:
                _i3.Future<_i5.NotificationAppLaunchDetails?>.value(),
          )
          as _i3.Future<_i5.NotificationAppLaunchDetails?>);

  @override
  _i3.Future<List<_i5.PendingNotificationRequest>>
  pendingNotificationRequests() =>
      (super.noSuchMethod(
            Invocation.method(#pendingNotificationRequests, []),
            returnValue: _i3.Future<List<_i5.PendingNotificationRequest>>.value(
              <_i5.PendingNotificationRequest>[],
            ),
            returnValueForMissingStub:
                _i3.Future<List<_i5.PendingNotificationRequest>>.value(
                  <_i5.PendingNotificationRequest>[],
                ),
          )
          as _i3.Future<List<_i5.PendingNotificationRequest>>);

  @override
  _i3.Future<List<_i5.ActiveNotification>> getActiveNotifications() =>
      (super.noSuchMethod(
            Invocation.method(#getActiveNotifications, []),
            returnValue: _i3.Future<List<_i5.ActiveNotification>>.value(
              <_i5.ActiveNotification>[],
            ),
            returnValueForMissingStub:
                _i3.Future<List<_i5.ActiveNotification>>.value(
                  <_i5.ActiveNotification>[],
                ),
          )
          as _i3.Future<List<_i5.ActiveNotification>>);
}
